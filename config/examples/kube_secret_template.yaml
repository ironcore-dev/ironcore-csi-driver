# example template to provide other cluster's kube config
apiVersion: v1
kind: Secret
metadata:
  name: kubeconfig-secret
data:
  kubeconfig.yaml: |
    YXBpVmVyc2lvbjogdjENCmNsdXN0ZXJzOg0KLSBjbHVzdGVyOg0KICAgIGNlcnRpZmljYXRlLWF1dGhvcml0eS1kYXRhOiBMUzB0TFMxQ1JVZEpUaUJEUlZKVVNVWkpRMEZVUlMwdExTMHRDazFKU1VSQ2FrTkRRV1UyWjBGM1NVSkJaMGxDUVZSQlRrSm5hM0ZvYTJsSE9YY3dRa0ZSYzBaQlJFRldUVkpOZDBWUldVUldVVkZFUlhkd2RHRlhOWEFLWVROV2FWcFZUa0pOUWpSWVJGUkplRTFFVFhsT1JFVTFUa1JCTUU1R2IxaEVWRTE0VFVSTmVVMTZSVFZPUkVFd1RrWnZkMFpVUlZSTlFrVkhRVEZWUlFwQmVFMUxZbGRzZFdGWGRERlpiVlpFVVZSRFEwRlRTWGRFVVZsS1MyOWFTV2gyWTA1QlVVVkNRbEZCUkdkblJWQkJSRU5EUVZGdlEyZG5SVUpCVEV4eUNscFRhMDVqYkZkc1pqSmlhRGt4YXpGdGEyVk9ZMjF0ZEVSc1RFTnhNR0Z6VUVwRVVHVjBiREZsYmxCME9GTnZZVVZDTkRneldIYzRiVEJuV25odmF5c0tWM0Z3YkhaVU5VTXJOMWxKTlVwbFIwTkhLMFJ6TVhSVGNFMUhZek5ZYVZOUFRIaDRkbFJRU0ROc1puaDNSbE5uV0VRelYzYzBZM2R0VURSdGVITnZSQXBzZVc1SmFIUlZTREJFWVdNdmNXdExkREY2WkhKSlNIQndjbFpYWTJWQ1MwRnhTbEJRWm1sdGVuRk9UMkk1V2pZdmJXSjBhQzlhYVRsUmMzVk5WRE5MQ25BNGNFWkhPVUZyVEhodmVsRnBiMjlwWmxkdFRFWkdUVUp1WjI5RVVUZElSWEp5TnpGVFltVnNVUzgzTTFkdk56VlVUaXRuYlVvMFFtSm5hVVZEWW5VS2JWZEJVSFppV2tKdFMyMU9XVWd2U2tkbGIyZFZaMDFLVG5kUFV6a3ljR3MyYW1vMWRFUnBkVVkzVGt4R1dVZDZaV1ZZUkRGQlEyOWhOVUpXYm1GMFVnbzJZbTQ0V1M5T01VdE5kWEpLWnl0Q2FrNVZRMEYzUlVGQllVNW9UVVk0ZDBSbldVUldVakJRUVZGSUwwSkJVVVJCWjB0clRVSXdSMEV4VldSS1VWRlhDazFDVVVkRFEzTkhRVkZWUmtKM1RVTkNaMmR5UW1kRlJrSlJZMFJCVkVGUVFtZE9Wa2hTVFVKQlpqaEZRbFJCUkVGUlNDOU5RakJIUVRGVlpFUm5VVmNLUWtKU1JEWnZLMFJtUm5WT1NucEZWRE5QVUVGVFFYUlpOV3BVYUZoRVFVNUNaMnR4YUd0cFJ6bDNNRUpCVVhOR1FVRlBRMEZSUlVGTmQzVk9iMUJrVVFwUWNYbE5ZaXRLVkhSeGFFZGhSRmRtYjFkdWVXZEtOVEZtYkZwRk9IWTRVVko1WWxkSWEwMVZUVGxxY1RWemRrUmtObWhWVEM5aWQxVk5TVlpaVTFNeENrSmpPR1Y1V2xGbFVtRmlhbXREWVVWUVZuQTNiVnBvUzJGR1ltRndkRFJJTmpGRFdURlhiMGxSYzI5MEwwMUZSRzF1Wm1GQlpVRndiMlpYU25KeWJGQUtPV1JvVlZKdFpsUk5SM1pUYjFFM1NXTldlbnA2VjNBeFNtcGFZMnhOVTI5MllVdFZXamx5T0V0RVRqSlpXRmxLVDBaWlUxcExaakF5ZFhwelZGTkJXQXBQUjJ0QllsTlJNWEJNVjFkTGJrZEhkbmQyTTFGUGEzcG5XVzlKZVRJM1NHeFZaVE5CVmpKVU9VMW1jMUF2VlZJNFpWZHlTamhGZFhoUU9IcFNlVFpTQ2tkcWMxQXpXa2hqV0RWa1ptdHBTREJ3TTJ0NWVHUktVa3hwTWxkbEwyOHJORTFITUdWUlVXdG5PV2xrWTA1dmVUSm1OSGN6ZDA5RVdXdzVSM1ZDWjI0S2JtcEtWSEYyYmtOWlEwdDJRWGM5UFFvdExTMHRMVVZPUkNCRFJWSlVTVVpKUTBGVVJTMHRMUzB0Q2c9PQ0KICAgIGV4dGVuc2lvbnM6DQogICAgLSBleHRlbnNpb246DQogICAgICAgIGxhc3QtdXBkYXRlOiBUdWUsIDI2IE9jdCAyMDIxIDE3OjA1OjAzIElTVA0KICAgICAgICBwcm92aWRlcjogbWluaWt1YmUuc2lncy5rOHMuaW8NCiAgICAgICAgdmVyc2lvbjogdjEuMTguMQ0KICAgICAgbmFtZTogY2x1c3Rlcl9pbmZvDQogICAgc2VydmVyOiBodHRwczovLzE5Mi4xNjguNDkuMjo4NDQzDQogIG5hbWU6IG1pbmlrdWJlDQpjb250ZXh0czoNCi0gY29udGV4dDoNCiAgICBjbHVzdGVyOiBtaW5pa3ViZQ0KICAgIGV4dGVuc2lvbnM6DQogICAgLSBleHRlbnNpb246DQogICAgICAgIGxhc3QtdXBkYXRlOiBUdWUsIDI2IE9jdCAyMDIxIDE3OjA1OjAzIElTVA0KICAgICAgICBwcm92aWRlcjogbWluaWt1YmUuc2lncy5rOHMuaW8NCiAgICAgICAgdmVyc2lvbjogdjEuMTguMQ0KICAgICAgbmFtZTogY29udGV4dF9pbmZvDQogICAgbmFtZXNwYWNlOiBkZWZhdWx0DQogICAgdXNlcjogbWluaWt1YmUNCiAgbmFtZTogbWluaWt1YmUNCmN1cnJlbnQtY29udGV4dDogbWluaWt1YmUNCmtpbmQ6IENvbmZpZw0KcHJlZmVyZW5jZXM6IHt9DQp1c2VyczoNCi0gbmFtZTogbWluaWt1YmUNCiAgdXNlcjoNCiAgICBjbGllbnQtY2VydGlmaWNhdGUtZGF0YTogTFMwdExTMUNSVWRKVGlCRFJWSlVTVVpKUTBGVVJTMHRMUzB0Q2sxSlNVUkpWRU5EUVdkdFowRjNTVUpCWjBsQ1FXcEJUa0puYTNGb2EybEhPWGN3UWtGUmMwWkJSRUZXVFZKTmQwVlJXVVJXVVZGRVJYZHdkR0ZYTlhBS1lUTldhVnBWVGtKTlFqUllSRlJKZUUxVVFYbE9WRVY0VFhwUmVVMUdiMWhFVkVsNVRWUkJlVTVxUlhoTmVsRjVUVVp2ZDAxVVJWaE5RbFZIUVRGVlJRcERhRTFQWXpOc2VtUkhWblJQYlRGb1l6TlNiR051VFhoR2FrRlZRbWRPVmtKQlRWUkVWekZ3WW0xc2NtUlhTbXhNV0ZaNldsaEpkMmRuUldsTlFUQkhDa05UY1VkVFNXSXpSRkZGUWtGUlZVRkJORWxDUkhkQmQyZG5SVXRCYjBsQ1FWRkVUMFpIZDI5b1NUa3pZWHBSWmtWa1dGWjZNbmhzYUhSNE4yWXJla2dLZW5GTWRHMXNha2hyWVcxVFdXZDJialpYU1dWUFVrbHhibEZoZW5adGVHbDVaWGxhWjJRcmNHaEJUbkIwY0RjNFFtRnhZMll3TjBwT0wycEtiRlptU1FwUWFXaDNRbGhOVEZWd0wydHlja2x2YmpKME9DOVJNbGhHYm0wMFNXRlhiMVV4TWtWWWJtZzVhRmt2ZERVeFYxSlFhSGxuWjJGS1ZUVjVkWFJqY1hFMENucENLemx3T1ZwcU4xTjVjV1ZaY1RKMVdTdExRVEJRZVROeVQyaFJOMmg0VEhCcVIxWjVURzFpYURoWmJUTjFLMU1yWkZNNWFuSnlRVVF2T1hObk4zUUtZbFpxY0ROaFZFNVlXRVF5UmpFNGNuaDJjRTlzZGtSeFVVbEZVRTVCT1VGd1VsZDBNVXBwS3pGUldXazBTV0ZoUkdGVWFIaEVjRkZXV0RjMGVrOVdhZ3BhU0hJMGQxcHBRazlRUjBKMGExTnFkazlMVm05Qk1FbEtiRE41YVZWaFEwcE1hbFJIVnpCbWQyUlhSRGMxVG00MFVXRTFhbGhoWkVGblRVSkJRVWRxQ2xsRVFtVk5RVFJIUVRGVlpFUjNSVUl2ZDFGRlFYZEpSbTlFUVdSQ1owNVdTRk5WUlVacVFWVkNaMmR5UW1kRlJrSlJZMFJCVVZsSlMzZFpRa0pSVlVnS1FYZEpkMFJCV1VSV1VqQlVRVkZJTDBKQlNYZEJSRUZtUW1kT1ZraFRUVVZIUkVGWFowSlNSRFp2SzBSbVJuVk9TbnBGVkROUFVFRlRRWFJaTldwVWFBcFlSRUZPUW1kcmNXaHJhVWM1ZHpCQ1FWRnpSa0ZCVDBOQlVVVkJXSGxFYjBaclNGcHFjRlJsTmsxR2MzWXhlREJ2V0VJdlpETTBkSFkwYTJWT1ZUZHlDamhrUkZNdmRGVk5UWGwzVUhad1VrOTZjM0IzU25FeVJqVTBUM2xuU1VFMmNsaDJTakZMVG1WSk1rMUtPVEEwYTI0eVRVZDJWM0ZGU0dsdlkweDVPSElLYTBWUFJVNXdkWGRRY1dKa1kwa3pObU5YWWtRcmVtNW5UMnN5ZG1OUFF6Z3JiUzk2YUU1VVZETjVORVpRVDNWcmFVVkRVRzFTTmxOSmRsUk5iMk01UkFvd2JYSmljRXBtVmtKTlNIRk1aMVF3ZERoVWMwWktibFkxZW5wV2JqWjFUMGxzV1hkeFVFNUhUMkp3TTJSTVEyWTVSMk5CTkZjM1J6WkliUzl0VFhoR0NqZFZlbEJrY25WbE1VZHJWUzl6UlhKbGFIRkhSazE0TVdsblNUZFlUVEZQWW5GWE0yZGlOVE5MS3pCbU1rSXdja2xvUVZkMlRFNUNZa0k0VFhSVE9USUtPRWN5WVdveWNFMXNVMVZ6V0hGWE9UTkhaRTlLTnl0Vk1VbG9SMWhyYnpjNWJsbHlZMFJLSzFCeGMyNW5TVEIxUTJjOVBRb3RMUzB0TFVWT1JDQkRSVkpVU1VaSlEwRlVSUzB0TFMwdENnPT0NCiAgICBjbGllbnQta2V5LWRhdGE6IExTMHRMUzFDUlVkSlRpQlNVMEVnVUZKSlZrRlVSU0JMUlZrdExTMHRMUXBOU1VsRmIyZEpRa0ZCUzBOQlVVVkJlbWhTYzB0SlUxQmtNbk13U0hoSVZqRmpPWE5hV1dKalpUTXZjM2c0Tm1rM1duQlplRFZIY0d0dFNVdzFLMnhwQ2tocWExTkxjREJIY3pjMWMxbHpibk50V1VobWNWbFJSR0ZpWVdVdlFWZHhia2c1VDNsVVpqUjVXbFpZZVVRMGIyTkJWbnBETVV0bU5VczJlVXRLT1hJS1psQXdUbXg0V2pWMVEwZHNjVVpPWkdoR05UUm1XVmRRTjJWa1ZtdFVOR052U1VkcFZrOWpjbkpZUzNGMVRYZG1kbUZtVjFrck1ITnhibTFMZEhKdFVBcHBaMDVFT0hRMmVtOVZUelJqVXpaWmVHeGphVFZ0TkdaSFNuUTNkbXQyYmxWMldUWTJkMEV2TDJKSlR6ZFhNVmsyWkRKcmVsWXhkemxvWkdaTE9HSTJDbFJ3WW5jMmEwTkNSSHBSVUZGTFZWWnlaRk5aZG5SVlIwbDFRMGR0WnpKck5HTlJObFZHVmlzclRYcHNXVEpTTml0TlIxbG5WR3A0WjJKYVJXODNlbWtLYkdGQlRrTkRXbVE0YjJ4SFoybFROREI0YkhSSU9FaFdaeXNyVkZvclJVZDFXVEV5YmxGSlJFRlJRVUpCYjBsQ1FVaDNTWFJNVTB0WVMwMHJjR1ZrVWdwWU9HWkthVmM1ZFVKVlVtSXdXa3hPU0hscmRFeGxVVzlIYzNwa1RVWmtUVVU1T0cwNFNGVjJaamR2ZEd0aFV5ODNhVlJUYXpKREt6aFRUSFZhVEVKQ0NscE9aU3RzUW1aMVJsWkxXRVJZWldKWFpFWmhjR3Q1V2xaV01WcG1RMlZTUmtOMmRGUjNSM2cyUmpkWUsxcElabGw2YW5Ca01VaDBWWEI1V2tWT2NGUUtZbEF4Tmt0Tk9EZFBRVWN3VFRKaU5HcE9OR3R3TldkTVVqQm1kWFpQY0hSUFJqRjNTR0ZoUkZscGVuZ3hVSEZwUlZSb1kwcDVNVUZLVjJGd0wwSmpjd28wTW01eU1uUTBUVzlZUzNOWVdXdEhXRlU1VDNKVllVNTBabGg2VGpCT1NESnJObEp0ZFRRNEwzaEJWbTVJU1N0UmFWVnlheTk0VWxkdEx6Qk9MMFk0Q25abFozcDZVR1pWWVVKRmVtWkpSQzlSUzNscGVubzJNelJhZFVsSVNqQTVaRXA0Y1dKUlpHVlFVMHA2TlhOaFUyNVhObHBaYmtwTVNYRkRhRFphVW1rS1JpOXVUR1ZWUlVObldVVkJORVpoZVc4NVpHd3lTbVZhWTJsRE9YaERhWEk0YkUxQlZXWlNTVE5qYlhsTGNtZG5WMHB3TnpGR0wyeG9XR0ZXYTNOVmRRcGlVV0pGYjJwc09UUmFUVlE1VmxNNGJHcHFTMFpUSzJGRGJGbDFiM1pCYkZGSVkyc3pObHBNWTJzd1NqRkZVbUV5ZUdaWUwxSlZSakIyVlhSdlVqTkNDbmRvZVV3dlJGaEVXR2d3VkRNMFdYcEVSVzFyUzFreVZGUkpRbkJOVjFsWVZEUTRlSHBCVVVkTlVXbEpTRmhSZUhGWmJVTkJVekJEWjFsRlFUWjViMG9LUldaM1dHeHRWRFoxTkRkeVEzcEtWSFZ0VWtZNWRYaE1kaTlhTlhWTlJHMDJTVFptVUhaWlVWUlhhV0ZVYlZONE1qWm9XbXRDVVd0cFNFNDNOSGRuZFFwMEszVXJlVzluVUdvNGJIRjVNVXN2VERaMFRrdG5VbFJSUkdwV1dpdENXRkV4VVV0SFZYSk5OeXRKVm01M1RrUmpNR1l4TlRaNFlUSnhZWGw1WWxCUENpOTJkbGxPWW5keE4xQkVNMlJCYkZaSlptZzVNbkV4WVZkallrOHJNalZMWVV4SU9GVlVSVU5uV1VGTGJWRXpibGcwTWxsS1pFWkNOblp2VFVGcUwyUUtUM0kyVWtsS1JYZHhVVFphY0dkcmFFcHRjMnBLVlZOaFoxaGxabUl5UlRaR1ZTOUZkV2xMVVZCWWNEYzFTSHByVHpseFVVWmhaVnBTVjJvcmJWbHRid29yWm1aeUswNWpibXg1ZDFoemQwd3plSEpEVm1KRFJGTlVia3hTV1dFMU9XeFJkVzQxYjBwTlRpdE9kMk00TmtacWFGVk1VVmg2Y2paRlZWQTJSbkpDQ21veWIza3dVak5hZDNsV2NTOXpielV3UWpCelNWRkxRbWRHYlc4NWFuQlpUR3B2VjBkQk4wbHdPRGR0UTJ0NFNHcFFSbVpIUjJGQ1RqbHNPRWR6TTFNS1EzUTROMlVyTWpOcmVGZFBhVTB4YUNzemRsZFphazUzVEVkNlkwbHpkbGMwZWtKbEwyVm1jR1ZKUlRZNVJTOWtaRkpqZFM5UWNrRmpTVlZvV1UxUU13b3hOek5oTm1oWlVEQm5VMFptZDAxSFJHSnBaREo1YjBGWmNYaExiRkZLWTNwUmRETjVZbTQzUTJFelFraFRaRTVyWkZvNVVEZFNOQ3N4VDJKemJEQkhDbVF4WjFKQmIwZEJaRGM1TDB0aWJtTkRhV1p6U0hobVduTldXamRsUTBrMU0wMTBiRGhpVGtGSFNHRmhla0ZuVTBWdFJpOXVSbXhDTlc5V1UxaGlTemNLTkRkTmJrZHZaVFl6TUZFMGNIWXpXbk54Y0U1UU0zVjFhMk0wWTBKSVF6UkthVUUzTVRoMFRrMXFRWFJNUjNjeGQxWTFLMWx5ZFhnckwzRllVRGxRY2dwaWFpOUZNVk4wTkRoUFlUTjFUM28yYkZaQ05USjRMM2hQYW1velFUQktXVTVoUm0xdU4ybzNTVEpTU0N0MlVteHlORWs5Q2kwdExTMHRSVTVFSUZKVFFTQlFVa2xXUVZSRklFdEZXUzB0TFMwdENnPT0NCg==
    